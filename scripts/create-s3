#!/usr/bin/env python

import sys
import time
import argparse
import boto.iam

# There can't be a newline or other character before the first brace.
POLICY = """{{
	"Id": "{title}Policy",
	"Statement": [
		{{
			"Sid": "{title}BucketACL",
			"Effect": "Allow",
			"Principal": {{
				"AWS": "{user_arn}"
			}},
			"Action": [
				"s3:GetBucketNotification",
				"s3:GetBucketCORS",
				"s3:ListBucketVersions",
				"s3:GetBucketRequestPayment",
				"s3:GetBucketTagging",
				"s3:ListBucket",
				"s3:GetBucketLogging",
				"s3:ListBucketMultipartUploads",
				"s3:GetBucketPolicy",
				"s3:GetLifecycleConfiguration",
				"s3:GetBucketLocation",
				"s3:GetBucketVersioning",
				"s3:GetBucketWebsite"
			],
			"Resource": "arn:aws:s3:::production-{name}"
		}},
		{{
			"Sid": "{title}BucketObjectsACL",
			"Effect": "Allow",
			"Principal": {{
				"AWS": "{user_arn}"
			}},
			"Action": [
				"s3:GetObjectVersionTorrent",
				"s3:AbortMultipartUpload",
				"s3:GetObjectAcl",
				"s3:GetObjectTorrent",
				"s3:RestoreObject",
				"s3:GetObjectVersion",
				"s3:DeleteObject",
				"s3:DeleteObjectVersion",
				"s3:GetObject",
				"s3:PutObjectAcl",
				"s3:PutObject",
				"s3:GetObjectVersionAcl"
			],
			"Resource": "arn:aws:s3:::production-{name}/*"
		}}
	]
}}
"""

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('name')
    parser.add_argument('--region', default='us-east-1')
    args = parser.parse_args()

    iam_name = args.name
    bucket_name = 'production-' + args.name

    iam = boto.iam.connect_to_region('universal')
    if iam is None:
        print >> sys.stderr, 'Invalid region specified for IAM.'
        return 1

    try:
        res = iam.create_user(iam_name)
    except boto.exception.BotoServerError as e:
        print >> sys.stderr, 'IAM user already exists'
        res = iam.get_user(iam_name)

    user = res.user

    data = {'name': iam_name, 'title': iam_name.title(), 'user_arn': user.arn}
    policy = POLICY.format(**data)

    s3 = boto.s3.connect_to_region(args.region)
    if s3 is None:
        print >> sys.stderr, 'Invalid region specified for S3.'
        return 1

    # Sometimes it takes awhile for the user ARN to settle ?!
    time.sleep(5)

    bucket = s3.create_bucket(bucket_name)
    try:
        bucket.set_policy(policy)
    except boto.exception.S3ResponseError:
        # try once more after an even longer sleep...
        time.sleep(3)
        bucket.set_policy(policy)

    return 0

if __name__ == '__main__':
    sys.exit(main())
